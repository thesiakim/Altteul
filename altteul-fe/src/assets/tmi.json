{
    "facts": [
      "알고 계셨나요? 세그먼트 트리는 구간 합이나 최소값 같은 구간 연산을 O(log N)에 처리해준답니다.",
      "알고 계셨나요? BFS(너비 우선 탐색)는 최단 거리가 필요한 무가중치 그래프에서 유용하게 쓰여요.",
      "알고 계셨나요? 퀵 정렬은 평균 시간 복잡도가 O(N log N)이지만, 최악에는 O(N²)까지 갈 수 있어요.",
      "알고 계셨나요? 다익스트라 알고리즘은 음수가 아닌 가중치 그래프에서 최단 경로를 찾을 때 가장 많이 사용하는 알고리즘 중 하나입니다.",
      "알고 계셨나요? 에라토스테네스의 체를 사용하면 소수를 빠르게 찾아낼 수 있답니다.",
      "알고 계셨나요? 동적 계획법(DP)은 작은 문제부터 답을 구해 큰 문제의 답을 구하는 방식으로, 메모리 사용량이 중요한 포인트예요.",
      "알고 계셨나요? 분할 정복 방식으로 구현된 알고리즘에는 병합 정렬, 퀵 정렬, 이진 탐색 등이 있어요.",
      "알고 계셨나요? 알고리즘 문제를 풀 때 메모리 초과가 뜨면, 자료구조의 크기와 사용 방식을 다시 점검해봐야 해요.",
      "알고 계셨나요? Knuth(도널드 커누스)는 “프로그래밍을 ‘가르치는 것(teaching)’은 컴퓨터 과학 발전을 돕는 최고의 투자다”라는 말을 했어요.",
      "알고 계셨나요? Union-Find(Disjoint Set) 자료구조는 그래프에서 연결 요소를 효율적으로 관리할 때 유용하답니다.",
      "알고 계셨나요? Git은 2005년에 리누스 토르발스가 만들었고, 분산 버전 관리 시스템의 대표 주자랍니다.",
      "알고 계셨나요? Python은 1991년 네덜란드의 귀도 반 로섬(Guido van Rossum)이 만들었고, 이름의 유래는 코미디 그룹 ‘몬티 파이썬’이에요.",
      "알고 계셨나요? 정렬 알고리즘 중 버블 정렬은 단순하지만, 시간 복잡도가 O(N²)라서 자료가 많아지면 비효율적일 수 있어요.",
      "알고 계셨나요? O(log N) 알고리즘은 입력 크기가 커질수록 성능 차이가 극명하게 드러나는 효율적인 알고리즘 복잡도 중 하나예요.",
      "알고 계셨나요? 스택은 LIFO(Last In First Out) 구조로, 브라우저 뒤로가기나 괄호 검사 등에 활용됩니다.",
      "알고 계셨나요? 큐는 FIFO(First In First Out) 구조로, BFS 구현이나 서비스 대기열 등에 많이 쓰여요.",
      "알고 계셨나요? Alan Turing(앨런 튜링)은 현대 컴퓨터 과학의 아버지로 불리며, “계산 가능한 것”의 개념을 정립했어요.",
      "알고 계셨나요? “Program testing can be used to show the presence of bugs, but never to show their absence!” – Edsger Dijkstra.",
      "알고 계셨나요? 비트마스킹은 정수형 변수를 이진수로 취급해, 부분 집합이나 상태를 효율적으로 관리할 때 유용합니다.",
      "알고 계셨나요? 그래프 탐색에서 DFS는 깊이 우선으로 탐색하고, BFS는 너비 우선으로 탐색해서 사용 용도가 달라요.",
      "알고 계셨나요? Topological Sort(위상 정렬)은 순서가 있는 작업을 나열할 때 사용하는 알고리즘입니다.",
      "알고 계셨나요? 계수 정렬(Counting Sort)은 데이터 범위가 제한적일 때, O(N + K)의 시간으로 매우 빠르게 동작해요.",
      "알고 계셨나요? “I’m not a great programmer; I’m just a good programmer with great habits.” – Kent Beck.",
      "알고 계셨나요? Slack도 처음에는 작은 스타트업 프로젝트에서 시작해, 지금은 전 세계 개발자들이 즐겨 사용하는 협업 툴이 되었답니다.",
      "알고 계셨나요? 그리디 알고리즘은 매 단계에서 가장 좋아 보이는 선택을 하는 방식이지만, 항상 최적해를 보장하지는 않아요.",
      "알고 계셨나요? Bitwise 연산(AND, OR, XOR 등)은 빠른 계산 속도 덕분에 알고리즘 최적화에 자주 활용됩니다.",
      "알고 계셨나요? ACM-ICPC(국제 대학생 프로그래밍 대회)는 전 세계 학생들에게 알고리즘 문제 해결 능력을 겨루게 하는 대회예요.",
      "알고 계셨나요? KMP 알고리즘은 문자열 검색 시 O(N + M)의 시간 복잡도로 빠르게 패턴을 찾을 수 있어요.",
      "알고 계셨나요? 브루트 포스 방식은 모든 경우의 수를 전부 시도하기 때문에 N이 조금만 커져도 매우 비효율적이 될 수 있어요.",
      "알고 계셨나요? “Simplify, simplify.” – Henry David Thoreau (개발도 복잡함을 줄이는 과정이죠!)",
      "알고 계셨나요? 해시(Hash)를 잘 설계하면 평균적으로 검색·삽입·삭제가 O(1)에 가능하지만, 해시 충돌 관리가 관건이에요.",
      "알고 계셨나요? 데이크스트라 알고리즘에서 우선순위 큐(힙)를 쓰면 O(E log V)로 최적화할 수 있어요.",
      "알고 계셨나요? PageRank 알고리즘은 구글 검색 엔진이 웹페이지 중요도를 측정하기 위해 만들었어요.",
      "알고 계셨나요? LeetCode, Baekjoon, Codeforces 등 다양한 온라인 저지에서 실력을 쌓을 수 있어요.",
      "알고 계셨나요? 정규 표현식은 문자열 패턴 매칭을 간결하게 만들어주지만, 복잡하게 쓰면 가독성이 떨어질 수 있어요.",
      "알고 계셨나요? DevOps 문화에서는 개발(Development)과 운영(Operations)을 긴밀하게 협업해, 배포 효율을 높입니다.",
      "알고 계셨나요? Git Branch는 독립된 작업을 하기에 편리하고, Merge나 Rebase로 최종 코드에 반영할 수 있어요.",
      "알고 계셨나요? 테스트 주도 개발(TDD)은 “실패하는 테스트 작성 → 최소한의 코드로 테스트 통과 → 리팩토링” 과정을 반복해요.",
      "알고 계셨나요? AWS, Azure, GCP 같은 클라우드 플랫폼을 활용하면, 인프라 구축 시간을 획기적으로 단축할 수 있어요.",
      "알고 계셨나요? “식사 가셨어요?” 대신 “테스트 코드 작성하셨어요?”라고 물어보는 문화를 만들어보는 건 어떨까요?"
    ]
  }
  